// Code generated by mockery v2.53.5. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	proxy "github.com/Khaym03/kumo/internal/pkg/proxy"
)

// MockRemoteBrowserURLBuilder is an autogenerated mock type for the RemoteBrowserURLBuilder type
type MockRemoteBrowserURLBuilder struct {
	mock.Mock
}

type MockRemoteBrowserURLBuilder_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRemoteBrowserURLBuilder) EXPECT() *MockRemoteBrowserURLBuilder_Expecter {
	return &MockRemoteBrowserURLBuilder_Expecter{mock: &_m.Mock}
}

// Build provides a mock function with no fields
func (_m *MockRemoteBrowserURLBuilder) Build() (string, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Build")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func() (string, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockRemoteBrowserURLBuilder_Build_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Build'
type MockRemoteBrowserURLBuilder_Build_Call struct {
	*mock.Call
}

// Build is a helper method to define mock.On call
func (_e *MockRemoteBrowserURLBuilder_Expecter) Build() *MockRemoteBrowserURLBuilder_Build_Call {
	return &MockRemoteBrowserURLBuilder_Build_Call{Call: _e.mock.On("Build")}
}

func (_c *MockRemoteBrowserURLBuilder_Build_Call) Run(run func()) *MockRemoteBrowserURLBuilder_Build_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockRemoteBrowserURLBuilder_Build_Call) Return(_a0 string, _a1 error) *MockRemoteBrowserURLBuilder_Build_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockRemoteBrowserURLBuilder_Build_Call) RunAndReturn(run func() (string, error)) *MockRemoteBrowserURLBuilder_Build_Call {
	_c.Call.Return(run)
	return _c
}

// WithProxy provides a mock function with given fields: _a0
func (_m *MockRemoteBrowserURLBuilder) WithProxy(_a0 proxy.Proxy) {
	_m.Called(_a0)
}

// MockRemoteBrowserURLBuilder_WithProxy_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WithProxy'
type MockRemoteBrowserURLBuilder_WithProxy_Call struct {
	*mock.Call
}

// WithProxy is a helper method to define mock.On call
//   - _a0 proxy.Proxy
func (_e *MockRemoteBrowserURLBuilder_Expecter) WithProxy(_a0 interface{}) *MockRemoteBrowserURLBuilder_WithProxy_Call {
	return &MockRemoteBrowserURLBuilder_WithProxy_Call{Call: _e.mock.On("WithProxy", _a0)}
}

func (_c *MockRemoteBrowserURLBuilder_WithProxy_Call) Run(run func(_a0 proxy.Proxy)) *MockRemoteBrowserURLBuilder_WithProxy_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(proxy.Proxy))
	})
	return _c
}

func (_c *MockRemoteBrowserURLBuilder_WithProxy_Call) Return() *MockRemoteBrowserURLBuilder_WithProxy_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockRemoteBrowserURLBuilder_WithProxy_Call) RunAndReturn(run func(proxy.Proxy)) *MockRemoteBrowserURLBuilder_WithProxy_Call {
	_c.Run(run)
	return _c
}

// NewMockRemoteBrowserURLBuilder creates a new instance of MockRemoteBrowserURLBuilder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRemoteBrowserURLBuilder(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRemoteBrowserURLBuilder {
	mock := &MockRemoteBrowserURLBuilder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
