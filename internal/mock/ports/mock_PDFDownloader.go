// Code generated by mockery v2.53.5. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MockPDFDownloader is an autogenerated mock type for the PDFDownloader type
type MockPDFDownloader struct {
	mock.Mock
}

type MockPDFDownloader_Expecter struct {
	mock *mock.Mock
}

func (_m *MockPDFDownloader) EXPECT() *MockPDFDownloader_Expecter {
	return &MockPDFDownloader_Expecter{mock: &_m.Mock}
}

// Download provides a mock function with given fields: url, savePath
func (_m *MockPDFDownloader) Download(url string, savePath string) error {
	ret := _m.Called(url, savePath)

	if len(ret) == 0 {
		panic("no return value specified for Download")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(url, savePath)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockPDFDownloader_Download_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Download'
type MockPDFDownloader_Download_Call struct {
	*mock.Call
}

// Download is a helper method to define mock.On call
//   - url string
//   - savePath string
func (_e *MockPDFDownloader_Expecter) Download(url interface{}, savePath interface{}) *MockPDFDownloader_Download_Call {
	return &MockPDFDownloader_Download_Call{Call: _e.mock.On("Download", url, savePath)}
}

func (_c *MockPDFDownloader_Download_Call) Run(run func(url string, savePath string)) *MockPDFDownloader_Download_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *MockPDFDownloader_Download_Call) Return(_a0 error) *MockPDFDownloader_Download_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockPDFDownloader_Download_Call) RunAndReturn(run func(string, string) error) *MockPDFDownloader_Download_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockPDFDownloader creates a new instance of MockPDFDownloader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPDFDownloader(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPDFDownloader {
	mock := &MockPDFDownloader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
